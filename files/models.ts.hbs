{{~#if operations}}
  {{#each operations~}}
    {{~#unless (equalAny engine 2)}}
export interface {{name}}Response<Error = any> {
  data?: {{name}}ResponseData
  error?: Error
}

    {{/unless~}}
  {{/each}}
{{~/if}}

{{#each objectFieldArray}}
{{#unless (equalAny root 'InternalInput')}}
export type {{joinString '_' documentPath}} = {{#if fields}}{
  {{#each fields}}
  {{#if description}}/** {{description}} */
  {{/if}}{{name}}{{#unless required}}?{{/unless}}: {{> field_type this=this }}
  {{/each}}
}{{else}}{{#unless additional}}{}{{/unless}}{{/if}}
{{~#if additional}}{{#equal typeName 'object'}}Record<string, {{/equal}}{{#with additional}}{{> field_type this=this }}{{/with}}{{#equal typeName 'object'}}>{{else}}[]{{/equal}}{{/if}}
{{/unless}}
{{/each}}

{{#each enumFieldArray}}
export enum {{upperFirst name}} {
  {{#each values}}
  {{#if description}}/** {{description}} */
  {{/if}}{{upperFirst (getOrDefault aliasKeys this this)}} = '{{this}}'{{#unless @last}},{{/unless}}
  {{/each}}
}
{{/each}}

export type JSONValue = string | number | boolean | JSONObject | Array<JSONValue>;

export type JSONObject = { [key: string]: JSONValue };
